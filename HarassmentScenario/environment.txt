% ****************** Environment Description ******************

% ********* Context Description *********

% ***** Types and Instances *****

% Lily is an academic
acad(lily).

% Amy is a student
stud(amy).

% alily and aamy are internal mail addresses
addr(alily;aamy).

% alily and aamy can be sender and recipient email addresses
sendAddr(alily;aamy).
recAddr(alily;aamy).

% nobodyAtNitrobaDotOrg is an external email address
faddr(nobodyAtNitrobaDotOrg).

% e1 represents an email body
email(e1).

% chemistry is a teaching course
course(chemistry).

% university and residence are two example locations
loc(uni;res).

% routers
rout(r1;r2).

%ip addresses
ip(ip1;ip2).

% sender and recipient ip addresses
sendIp(ip1;ip2).
recIp(ip1;ip2).

%browser
browser(b1).

% ***** Context Relations *****

% A student attends a course
fluent(attend(P,C)):-
    stud(P), course(C).

% An academic teaches a course
fluent(teach(P,C)):-
    acad(P), course(C).

%A student owns an email address
fluent(studEmail(S,E)):-
    stud(S),addr(E).

%An academic owns an email address
fluent(acadEmail(A,E)):-
    acad(A),addr(E).

% A router is located in a specific place
fluent(isLocatedIn(R,L)):-
    rout(R), loc(L).

% A student has access to a location
fluent(hasBadgeS(S,L)):-
    stud(S), loc(L).

% An academic has access to a location
fluent(hasBadgeA(A,L)):-
    acad(A), loc(L).

% A cookie is set between user having email address E and server A
fluent(cookieSet(E,S,D)):-
    addr(E), sendIp(S), recIp(D).


% ********* Behaviour Description *********

% ***** Primitive Events *****

event(V):-
    pe(V).

% The network traffic at router R indicates that an email E is sent
% from email address S to D from a device associated with ip A

pe(send_email(E,S,D,A,R)):-
    email(E), sendAddr(S), recAddr(D), ip(A), rout(R).

% The network traffic at router R indicates that an email is sent
% from an external email address S to D from a device associated with ip A

pe(send_fake_email(E,S,D,A,R)):-
    email(E), faddr(S), addr(D), ip(A), rout(R).

% The network traffic at router R indicates that a cookie whose id refers to email address S  is set from a
% server associated with ip A to a user whose device is associated with ip B

pe(set_cookie(S,A,B,R)):-
    addr(S),
    sendIp(A),
    recIp(B),
    rout(R).

% The network traffic at router R indicates that a messages is exchanged from address S to D,
% where the sender uses browser agent B

pe(exchange_msg(B,S,D,R)):-
    browser(B), sendIp(S), recIp(D), rout(R).

% The network traffic at router R indicates that an anonymous email was sent from address S to D,
% where the sender uses browser agent B

pe(send_anon_email(B,S,D,R)):-
    browser(B), sendIp(S), recIp(D), rout(R).


% ***** Complex Events *****

event(V):-
    ce(V).

% A potentially harassing email is sent by student P1 to academic P2

ce(harassEmailSent(E,P1,P2)):-
    email(E), stud(P1), acad(P2).

% An email is sent from an external address to an academic

ce(fakeHarassEmailSent(E,S,P)):-
    email(E), faddr(S), acad(P).

% A cookie referring to email addres E is set from address S to D

ce(initCookie(E,S,D)):-
    addr(E), sendIp(S), recIp(D).

% An academic exchanges a message from ip S by using browser agent B

ce(acadSendMsg(P,B,S)):-
    acad(P), browser(B), sendIp(S).

% A student exchanges a message from ip S by using browser agent B

ce(studSendMsg(P,B,S)):-
    stud(P), browser(B), sendIp(S).

% A student sends an anonymous email

ce(sendAnonHarassEmail(E,P1)):-
    email(E), stud(P1).

% A anonymous email is sent from ip S

ce(sendAnonHarassEmail(E,S)):-
    email(E), sendIp(S).


% ***** Composite Definitions *****

% A anonymous email is sent from ip S. This address cannot be associated
% with the browser agent used by an academic or a student

happens(sendAnonHarassEmail(E,S), T, TR):-
    email(E),
    trace(TR),
    sendIp(S),
    time(T),
    time(T1),
    T1 < T,
    browser(B),
    sendIp(S),
    rout(R),
    recIp(D),
    acad(P2),
    stud(P1),
    not happens(acadSendMsg(P2,B,S),T1,TR),
    not happens(studSendMsg(P1,B,S),T1,TR),
    happens(send_anon_email(B,S,D,R),T,TR).

% A anonymous email is sent from student P1. In this case the person can be identified because
% she previously exchanged a message by using the same browser agent and ip address from
% which the anonymous email was sent

happens(sendAnonHarassEmail(E,P1), T,TR):-
    trace(TR),
    email(E),
    stud(P1),
    time(T),
    time(T1),
    T1 < T,
    browser(B),
    sendIp(S),
    rout(R),
    recIp(D),
    happens(studSendMsg(P1,B,S),T1,TR),
    happens(send_anon_email(B,S,D,R),T,TR).

% A anonymous email is sent from student P1. In this case the person can be identified because
% she previously exchanged a message by using the same browser agent and ip address from
% which the anonymous email was sent

happens(acadSendMsg(P,B,S),T,TR):-
    browser(B),
    sendIp(S),
    recIp(S),
    recIp(D),
    sendIp(D),
    rout(R),
    time(T),
    acad(P),
    loc(L1),
    addr(E),
    trace(TR),
    happens(exchange_msg(B,S,D,R),T,TR),
    holdsAt(cookieSet(E,D,S),T,TR),
    holdsAt(hasBadgeA(P,L1),T,TR),
    holdsAt(isLocatedIn(R,L1),T,TR),
    holdsAt(acadEmail(P,E),T,TR).


% A anonymous email is sent from student P. In this case the person can be identified because
% she previously exchanged a message by using the same browser agent and ip address from
% which the anonymous email was sent

happens(studSendMsg(P,B,S),T,TR):-
    trace(TR),
    browser(B),
    sendIp(S),
    recIp(S),
    recIp(D),
    sendIp(D),
    rout(R),
    time(T),
    stud(P),
    loc(L1),
    addr(E),
    holdsAt(studEmail(P,E),T,TR),
    happens(exchange_msg(B,S,D,R),T,TR),
    holdsAt(hasBadgeS(P,L1),T,TR),
    holdsAt(isLocatedIn(R,L1),T,TR),
    holdsAt(cookieSet(E,D,S),T,TR).


% A cookie is set between a sender and receiver address (S and D, respectively)
% if a set cookie message is exchanged between the server and the receiver address
% and the cookie is associated with an email address

happens(initCookie(E,S,D), T,TR):-
    trace(TR),
    addr(E),
    time(T),
    rout(R),
    sendIp(S), recIp(D),
    S != D,
    happens(set_cookie(E,S,D,R),T,TR),
    not holdsAt(cookieSet(E,S,D),T,TR).



% A potentially harassing email is sent to a teacher by one of his/her students;
% the student is entitled to access to the location in which the router that transmitted
% the network packets associated with the email is located.

happens(harassEmailSent(E,P1,P2),T,TR) :-
    trace(TR),
    time(T),
    sendAddr(S), recAddr(R),
    email(E),
    stud(P1),
    acad(P2),
    rout(W),
    course(C),
    holdsAt(studEmail(P1,S),T,TR),
    holdsAt(acadEmail(P2,R), T,TR),
    happens(send_email(E,S,R, A,W),T,TR),
    holdsAt(hasBadgeS(P1,L1),T,TR),
    holdsAt(isLocatedIn(W,L1),T,TR),
    holdsAt(teach(P2,C),T,TR),
    holdsAt(attend(P1,C),T,TR).

% A potentially harassing email is sent to a teacher by using an external address

happens(fakeHarassEmailSent(E,S,P),T,TR) :-
    trace(TR),
    time(T),
    faddr(S),
    addr(R),
    email(E),
    acad(P),
    holdsAt(acadEmail(P,R),T,TR),
    ip(A),
    rout(W),
    happens(send_fake_email(E,S,R,A,W),T,TR).

% A student cannot own an email of an academic
holdsAt(studEmail(P1,S),T,TR) :-
    stud(P1),
    addr(S),
    time(T),
    trace(TR),
    not holdsAt(acadEmail(P2,S),T,TR),
    acad(P2).

% An academic cannot own the email of a student
holdsAt(acadEmail(P1,S),T,TR) :-
    acad(P1),
    addr(S),
    time(T),
    trace(TR),
    not holdsAt(studEmail(P2,S),T,TR),
    stud(P2).



% +++ Context Relation Definitions +++

% If a cookie associated with an email address E is being set from address S to D,
% then the cookie associated with email E is considered set between address S and D

initiates(initCookie(E,S,D),cookieSet(E,S,D), T):-
    addr(E), sendIp(S), recIp(D), time(T).


% Initial state

initially(teach(lily,chemistry)).
initially(attend(amy,chemistry)).

initially(studEmail(amy,aamy)).


initially(acadEmail(lily,alily)).

initially(isLocatedIn(r1,uni)).
initially(isLocatedIn(r2,res)).

initially(hasBadgeS(amy,uni)).
initially(hasBadgeS(amy,res)).

initially(hasBadgeA(lily,uni)).





