event(V):-
    op(V).

fluent(F):-
    fop(F).

% Spec

op(preserve(A,TS)):-
    clock(TS),
    pe(A).

fop(preserved(A,TS)):-
    clock(TS),
    pe(A).

initiates(preserve(A,TS), preserved(A,TS), T):-
    pe(A),
    clock(TS),
    time(T),
    op(preserve(A,TS)),
    fop(preserved(A,TS)).

impossible(preserve(A,TS), T, TR):-
    trace(TR),
    time(T),
    clock(TS),
    pe(A),
    holdsAt(preserved(A,TS),T,TR).

dpre(preserve(A,TS), T, TR):-
    trace(TR),
    time(T),
    clock(TS),
    pe(A),
    not holdsAt(preserved(A,TS),T,TR).


op(receive(A,TS)):-
    clock(TS),
    pe(A).

fop(received(A,TS)):-
    clock(TS),
    pe(A).

initiates(receive(A,TS), received(A,TS), T):-
    pe(A),
    time(T),
    clock(TS),
    op(receive(A,TS)),
    fop(received(A,TS)).

impossible(receive(A,TS), T,TR):-
    trace(TR),
    time(T),
    clock(TS),
    pe(A),
    holdsAt(received(A,TS),T,TR).

dpre(receive(A,TS), T,TR):-
    trace(TR),
    time(T),
    clock(TS),
    pe(A),
    not holdsAt(received(A,TS),T,TR).


:- pe(A), time(T), trace(TR),happens(A,T,TR),
    not happens(preserve(A,T), T,TR).

:- pe(A), trace(TR), time(T),happens(preserve(A,T),T,TR),
    not happens(A, T,TR).

:- pe(A), time(T),trace(TR), happens(preserve(A,TS),T,TR), time(T), clock(TS),
    not dpre(preserve(A,TS),T,TR).

happens(receive(A,T),T,TR):-
    time(T),
    trace(TR),
    pe(A),
    happens(A,T,TR).
%-------

